#include <iostream>
#include <fstream>
using namespace std;
#include <string>
#include "Hora.h"
#include "Contrato.h"
#include "Servicio.h"
#include "Empresarial.h"
#include "Personal.h"

void consultaContrato(Contrato arrContrato[], Servicio *arrServ[], int cCont, int cServ){
    for(int z=0; z<cCont; z++){
        for(int i=0; i<cServ; i++){
            if(arrContrato[z].getCveServicio()==arrServ[i]->getCveServicio())
                arrServ[i]->muestra();
        }

        cout<<"Id del cliente: "<<arrContrato[z].getIDCliente()<<endl;
        cout<<"Hora de inicio: "<<arrContrato[z].getHoraInicio()<<endl;
        cout<<"Duración: "<<arrContrato[z].getDuraHrs()<<" horas"<<endl;
        //if(arrServ[z]->getTipo()=='B' || arrServ[z]->getTipo() == 'Q' || arrServ[z]->getTipo() == 'P')
        cout<<"Costo para el cliente : $"<<arrServ[z]->calculaCosto(arrContrato[z].getDuraHrs())<<endl;
        cout<<"-------------------------------------"<<endl;
    }
}
void consultaHora(Contrato arrContrato[], Servicio *arrServ[], int cCont, int cServ){
    Hora horaConsultada;
    int verificador=0;
    cout<<"Ingrese la hora que quiere a consultar."<<endl;
    cin>>horaConsultada;
    cout<<endl;
    for(int z=0; z<cCont; z++){
        if(arrContrato[z].getHoraInicio().getHora()==horaConsultada.getHora() && arrContrato[z].getHoraInicio().getMinuto()==horaConsultada.getMinuto() ){
            for(int i=0; i<cServ; i++){
                if(arrContrato[z].getCveServicio()==arrServ[i]->getCveServicio()){
                    arrServ[i]->muestra();
                    cout<<"------------------------------"<<endl;
                }
                verificador=1;
            }
        }
    }
    if(verificador==0)
        cout<<"No hay contratos con esa hora"<<endl;
}

/*
	Función: hacerContrato: Crear un nuevo contrato
	Parámetros:
		*arrServ[]	- Arreglo de apuntadores a objetos
		i	        - Cantidad de servicios agregados
	Valor de retorno: Contrato nuevo cn
*/
Contrato hacerContrato(Servicio *arrServ[],int i){
    int id, z=0, hr, mn, drc, indice;
    string cve;
    char op;
    Empresarial em1;
    cout<<"Teclea tu id de cliente"<<endl;
    cin>>id;
    while(z!=1){
        cout<<"Teclea la clave de servicio"<<endl;
        cin>>cve;
        for(int x=0; x<i; x++){
            if(cve == arrServ[x]->getCveServicio()){
                z=1;
                indice=x;
            }
        }
        if(z!=1)
            cout<<"No existe esa clave"<<endl;
    }
    while(hr>23 || mn>59){
        cout<<"Teclea la hora de inicio (hh:mm)"<<endl;
        cin>>hr>>mn;
        if(hr> 23 || mn>59)
            cout<<"Hora incorrecta"<<endl;
    }
    Hora hn(hr, mn);
    while(z==1){
        cout<<"Teclea la duracion"<<endl;
        cin>>drc;
        /*
        if(drc < 100){
            cout<<"La duracion que tecleo es menor a la duracion la cual el evento se puede contratar\nDesea reservar por mas tiempo?(y/n)"<<endl;
            cin>>op;
            if(op=='n')
                z=2;
        }
        else
        */
            z=0;

    }
    if (z==0){
        cout<<"El costo por las horas solicitadas es "<<arrServ[indice]->calculaCosto(drc)<<endl;
        Contrato cn(cve, id, hn, drc);
        return cn;
    }


}

/*
	Función: menu: Desplegar el menu de opcion
	Parámetros: -----
	Valor de retorno: -----
*/
void menu(){

    cout<<"1.Consultar lista de servicios\n2.Consultar lista de contratos\n3.Consultar los contratos de un servicio dado\n"
    "4.Consulta los contratos de una hora especifica\n5.Hacer un contrato\n6.Terminar"<<endl;



}

int main()
{
    ifstream archServ, archContra;
    ofstream archContrato;
    archServ.open("Servicios.txt");
    archContra.open("Contratos.txt");
    Contrato arrContrato[20];
    Servicio* arrServ[10];
    string cveServicio, descripcion;
    char tipo;
    double costo;
    int iServ=0, iCont=0;
    int maximaCant, op, idCliente, duraHrs, cantidad=0;
    Hora horaInicio;

    while(!archContra.eof()){
        archContra>>cveServicio>>idCliente>>horaInicio>>duraHrs;
        arrContrato[iCont]=Contrato(cveServicio, idCliente, horaInicio, duraHrs);
        iCont++;
    }
    archContra.close();
    while(!archServ.eof()){
        archServ>>cveServicio>>tipo;
        if(tipo == 'B' || tipo == 'Q' || tipo == 'P' ){
            archServ>>costo;
            getline(archServ, descripcion);
            arrServ[iServ]=new Personal(cveServicio, tipo, costo, descripcion);
        }
        else{
            archServ>>costo>>maximaCant;
            getline(archServ, descripcion);
            arrServ[iServ]=new Empresarial(cveServicio, tipo, costo, maximaCant, descripcion);
        }

        iServ++;
    }
    for(int z=0; z<iServ; z++){
        arrServ[z]->muestra();
    }

    cantidad=iCont;
    archContrato.open("Contratos.txt");
    menu();
    cin>>op;
    while(op != 6){
        switch(op){
            case 1:
                break;
            case 2:
                consultaContrato(arrContrato, arrServ, iCont, iServ);
                break;
            case 3:
                break;
            case 4:
                consultaHora(arrContrato, arrServ, iCont, iServ);
                break;
            case 5:
                arrContrato[cantidad]=hacerContrato(arrServ,iServ);
                cantidad+=1;
                break;
            case 6:
                break;

        }
        menu();
        cin>>op;
    }
    for(int x=0; x<cantidad; x++){
        archContrato<<arrContrato[x].getCveServicio()<<" "<<arrContrato[x].getIDCliente()<<" "<<arrContrato[x].getHoraInicio()<<" "<<arrContrato[x].getDuraHrs()<<endl;
    }


    return 0;

}
